ngx_addon_name=ngx_wasm_module
ngx_found=no

ngx_wasm_runtime_name=${NGX_WASM_RUNTIME:-wasmtime}

case $ngx_wasm_runtime_name in
    wasmtime)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wasmtime.c"

        ngx_feature_name="NGX_WASM_HAVE_WASMTIME"
        ngx_feature_incs="#include <wasm.h>
                          #include <wasmtime.h>"
        ;;
    WAVM)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wavm.c"

        ngx_feature_name="NGX_WASM_HAVE_WAVM"
        ngx_feature_incs="#include <wavm-c.h>"
        ;;
    wasmer)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wasmer.c"

        ngx_feature_name="NGX_WASM_HAVE_WASMER"
        ngx_feature_incs="#include <wasmer.h>"
        ;;
    v8)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_v8.c"
        ngx_wasm_runtime_lib_name="wee8"
        ngx_wasm_runtime_pre_libs="-lcwabt -lv8bridge"
        ngx_wasm_runtime_post_libs="-ldl -lpthread -lm -lstdc++"

        if [ -n "$NGX_WASM_CWABT_INC" ]; then
            NGX_WASM_RUNTIME_INC="$NGX_WASM_RUNTIME_INC -I $NGX_WASM_CWABT_INC"
        fi

        if [ -n "$NGX_WASM_CWABT_LIB" ]; then
            NGX_WASM_RUNTIME_LIB="$NGX_WASM_RUNTIME_LIB -L$NGX_WASM_CWABT_LIB"
        fi

        ngx_feature_name="NGX_WASM_HAVE_V8"
        ngx_feature_incs="#include <wasm.h>"
        ;;
    *)
        echo "$0: error: $ngx_addon_name does not support the \"$ngx_wasm_runtime_name\" runtime."
        echo "Supported runtimes: wasmtime, wasmer, WAVM, v8."
        echo
        exit 1
esac

ngx_wasm_runtime_inc=$NGX_CC_OPT
ngx_wasm_runtime_lib=
ngx_wasm_runtime_opt=$NGX_LD_OPT

. $ngx_addon_dir/auto/runtime

if [ -n "$NGX_WASM_RUNTIME_INC" -o -n "$NGX_WASM_RUNTIME_LIB" ]; then
    ngx_wasm_runtime_inc="-I $NGX_WASM_RUNTIME_INC"
    ngx_wasm_runtime_lib="-L$NGX_WASM_RUNTIME_LIB"
    ngx_wasm_runtime_opt=$NGX_WASM_RUNTIME_LD_OPT

    . $ngx_addon_dir/auto/runtime
fi

ngx_wasm_runtime_inc="-I /usr/local/opt/include"
ngx_wasm_runtime_lib="-L/usr/local/opt/lib"
ngx_wasm_runtime_opt=

. $ngx_addon_dir/auto/runtime

ngx_wasm_runtime_inc="-I /usr/local/include"
ngx_wasm_runtime_lib="-L/usr/local/lib"
ngx_wasm_runtime_opt=

. $ngx_addon_dir/auto/runtime

if [ $ngx_found = no ]; then
    echo "$0: error: $ngx_addon_name could not find the \"$ngx_wasm_runtime_name\" library."
    echo "You can set the NGX_WASM_RUNTIME_INC, NGX_WASM_RUNTIME_LIB, and NGX_WASM_RUNTIME_LD_OPT environment variables."
    echo
    exit 1
fi

have=NGX_WASM_RUNTIME value="\"$ngx_wasm_runtime_name\"" . auto/define

###############################################################################

# core

NGX_WASM_INCS="\
    $ngx_feature_path \
    $ngx_addon_dir/src/wasm \
    $ngx_addon_dir/src/wasm/wrt \
    $ngx_addon_dir/src/wasm/vm \
    $ngx_addon_dir/src/wasm/wasi \
    $ngx_addon_dir/src/common \
    $ngx_addon_dir/src/common/proxy_wasm \
    $ngx_addon_dir/src/common/shm"

NGX_WASM_DEPS="\
    $ngx_addon_dir/src/wasm/wrt/ngx_wrt.h \
    $ngx_addon_dir/src/wasm/ngx_wasm.h \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm.h \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm_host.h \
    $ngx_addon_dir/src/wasm/ngx_wasm_ops.h \
    $ngx_addon_dir/src/wasm/wasi/ngx_wasi.h \
    $ngx_addon_dir/src/common/ngx_wasm_ffi.h \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp.h \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp_readers.h \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm.h \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_maps.h \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_properties.h \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm.h \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_kv.h \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_queue.h"

NGX_WASM_SRCS="\
    $ngx_addon_dir/src/wasm/ngx_wasm.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_ops.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_util.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_directives.c \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm.c \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm_host.c \
    $ngx_addon_dir/src/wasm/wasi/ngx_wasi_host.c \
    $ngx_addon_dir/src/common/ngx_wasm_ffi.c \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp.c \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp_readers.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_host.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_maps.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_properties.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_util.c \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm.c \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_kv.c \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_queue.c \
    $ngx_wasm_runtime_srcs"

NGX_WASM_CORE_SRCS="\
    $ngx_addon_dir/src/wasm/ngx_wasm_core_module.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_core_host.c"

# http

NGX_HTTP_WASM_INCS="\
    $ngx_addon_dir/src/http \
    $ngx_addon_dir/src/http/proxy_wasm"

NGX_HTTP_WASM_DEPS="\
    $ngx_addon_dir/src/http/ngx_http_wasm.h \
    $ngx_addon_dir/src/http/ngx_http_wasm_util.h \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers.h \
    $ngx_addon_dir/src/http/ngx_http_wasm_trailers.h \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm.h \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm_dispatch.h"

NGX_HTTP_WASM_SRCS="\
    $ngx_addon_dir/src/http/ngx_http_wasm_module.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_directives.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_local_response.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers_request.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers_response.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_trailers_response.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers_shims.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_host.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_util.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_escape.c \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm.c \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm_dispatch.c"

NGX_HTTP_WASM_FILTER_SRCS="\
    $ngx_addon_dir/src/http/ngx_http_wasm_filter_module.c"

# stream

NGX_STREAM_WASM_INCS="\
    $ngx_addon_dir/src/stream \
    $ngx_addon_dir/src/stream/proxy_wasm"

NGX_STREAM_WASM_DEPS="\
    $ngx_addon_dir/src/stream/ngx_stream_wasm.h \
    $ngx_addon_dir/src/stream/proxy_wasm/ngx_stream_proxy_wasm.h"

NGX_STREAM_WASM_SRCS="\
    $ngx_addon_dir/src/stream/ngx_stream_wasm_module.c"

# ssl

if [ $HTTP_SSL = YES -o $STREAM_SSL = YES ]; then
    NGX_WASM_DEPS="\
        $NGX_WASM_DEPS \
        $ngx_addon_dir/src/common/ngx_wasm_ssl.h"

    NGX_WASM_SRCS="\
        $NGX_WASM_SRCS \
        $ngx_addon_dir/src/common/ngx_wasm_ssl.c"
fi

###############################################################################

if [ "$ngx_module_link" = DYNAMIC ]; then
    ngx_module_order="$ngx_addon_name \
                      ngx_wasm_core_module"

    ngx_module_type=CORE
    ngx_module_name=$ngx_addon_name
    ngx_module_incs="$NGX_WASM_INCS"
    ngx_module_deps="$NGX_WASM_DEPS"
    ngx_module_srcs="$NGX_WASM_SRCS \
                     $NGX_WASM_CORE_SRCS"
    ngx_module_libs=$ngx_feature_libs

else
    # addon
    ngx_module_type=CORE
    ngx_module_name=$ngx_addon_name
    ngx_module_incs="$NGX_WASM_INCS"
    ngx_module_deps="$NGX_WASM_DEPS"
    ngx_module_srcs="$NGX_WASM_SRCS"
    ngx_module_libs=$ngx_feature_libs

    . auto/module

    ngx_module_type=WASM
    ngx_module_name=ngx_wasm_core_module
    ngx_module_incs="$NGX_WASM_INCS"
    ngx_module_deps="$NGX_WASM_DEPS"
    ngx_module_srcs="$NGX_WASM_CORE_SRCS"
    ngx_module_libs=

    . auto/module
fi

###############################################################################

if [ $HTTP = YES ]; then
    if [ "$ngx_module_link" = DYNAMIC ]; then
        ngx_module_order="$ngx_module_order \
                          ngx_http_wasm_module \
                          ngx_http_wasm_filter_module"

        ngx_module_incs="$ngx_module_incs \
                         $NGX_HTTP_WASM_INCS"
        ngx_module_deps="$ngx_module_deps \
                         $NGX_HTTP_WASM_DEPS"
        ngx_module_srcs="$ngx_module_srcs \
                         $NGX_HTTP_WASM_SRCS \
                         $NGX_HTTP_WASM_FILTER_SRCS"

    else
        # addon
        ngx_module_type=HTTP
        ngx_module_name=ngx_http_wasm_module
        ngx_module_incs="$NGX_HTTP_WASM_INCS"
        ngx_module_deps="$NGX_HTTP_WASM_DEPS"
        ngx_module_srcs="$NGX_HTTP_WASM_SRCS"
        ngx_module_libs=

        . auto/module

        ngx_module_type=HTTP_FILTER
        ngx_module_name=ngx_http_wasm_filter_module
        ngx_module_incs="$NGX_HTTP_WASM_INCS"
        ngx_module_deps="$NGX_HTTP_WASM_DEPS"
        ngx_module_srcs="$NGX_HTTP_WASM_FILTER_SRCS"
        ngx_module_libs=

        . auto/module
    fi

    have=NGX_WASM_HTTP value=1 . auto/define
fi

if [ $STREAM = YES ]; then
    if [ "$ngx_module_link" = DYNAMIC ]; then
        ngx_module_incs="$ngx_module_incs \
                         $NGX_STREAM_WASM_INCS"
        ngx_module_deps="$ngx_module_deps \
                         $NGX_STREAM_WASM_DEPS"
        ngx_module_srcs="$ngx_module_srcs \
                         $NGX_STREAM_WASM_SRCS"

    else
        # addon
        ngx_module_type=STREAM
        ngx_module_name=ngx_stream_wasm_module
        ngx_module_incs="$NGX_STREAM_WASM_INCS"
        ngx_module_deps="$NGX_STREAM_WASM_DEPS"
        ngx_module_srcs="$NGX_STREAM_WASM_SRCS"
        ngx_module_libs=

        . auto/module
    fi

    have=NGX_WASM_STREAM value=1 . auto/define
fi

###############################################################################

if [ "$ngx_module_link" = DYNAMIC ]; then
    # ngx_wasm_module.so (dynamic module)
    . auto/module

    # add other modules into this bundled one
    ngx_wasm_module_MODULES=$ngx_module_order

else
    # addon
    # bypass auto/make which does not recognize $WASM_ variables
    CORE_MODULES="$CORE_MODULES $WASM_MODULES"
fi

# vim:ft=sh ts=4 sts=4 sw=4:
