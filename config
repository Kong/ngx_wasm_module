find_runtime() {
    if [ $ngx_found = yes ]; then
        return
    fi

    ngx_feature="$NGX_WASM_RUNTIME library"
    ngx_feature_path=
    ngx_feature_libs=

    if [ -n "$1" ]; then
        ngx_feature="$ngx_feature, -I $1"
        ngx_feature_path="$1"
    fi
    if [ -n "$2" ]; then
        ngx_feature="$ngx_feature, -L $2 -l$NGX_WASM_RUNTIME"
        ngx_feature_libs="-L $2 -l$NGX_WASM_RUNTIME"
    fi
    if [ -n "$3" ]; then
        ngx_feature="$ngx_feature ($3)"
        ngx_feature_libs="$3"
    fi

    if [ -z "$ngx_feature_libs" -a -n "$NGX_WASM_RUNTIME" ]; then
        ngx_feature="$ngx_feature, -l$NGX_WASM_RUNTIME"
        ngx_feature_libs="-l$NGX_WASM_RUNTIME"
    fi

    ngx_feature_run=no
    ngx_feature_test=

    . auto/feature
}

NGX_WASM_RUNTIME="${NGX_WASM_RUNTIME:-wasmtime}"

ngx_found=no

case $NGX_WASM_RUNTIME in
    wasmtime)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wasmtime.c"

        ngx_feature_name="NGX_WASM_HAVE_WASMTIME"
        ngx_feature_incs="#include <wasm.h>
                          #include <wasmtime.h>"
        ;;
    WAVM)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wavm.c"

        ngx_feature_name="NGX_WASM_HAVE_WAVM"
        ngx_feature_incs="#include <wavm-c.h>"
        ;;
    wasmer)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wasmer.c"

        ngx_feature_name="NGX_WASM_HAVE_WASMER"
        ngx_feature_incs="#include <wasmer_wasm.h>"
        ;;
    *)
        echo "$0: error: unsupported wasm runtime \"$NGX_WASM_RUNTIME\"."
        echo "Supported runtime: wasmtime, wasmer, WAVM."
        echo
        exit 1
esac

find_runtime "$NGX_WASM_RUNTIME_INC"  "$NGX_WASM_RUNTIME_LIB" "$NGX_WASM_RUNTIME_LD_OPT"
find_runtime "/usr/local/opt/include" "/usr/local/opt/lib"
find_runtime "/usr/local/include"     "/usr/local/lib"

if [ $ngx_found = no ]; then
    cat << END
$0: error: $ngx_module_name could not find the $NGX_WASM_RUNTIME library.
You can set the \$NGX_WASM_RUNTIME_INC and \$NGX_WASM_RUNTIME_LIB environment variables."

END
    echo
    exit 1
fi

have=NGX_WASM_RUNTIME value="\"$NGX_WASM_RUNTIME\"" . auto/define

###############################################################################

ngx_module_type=CORE
ngx_module_name=ngx_wasm_module
ngx_module_incs="$ngx_feature_path \
                 $ngx_addon_dir/src/wasm \
                 $ngx_addon_dir/src/wasm/wrt \
                 $ngx_addon_dir/src/wasm/vm \
                 $ngx_addon_dir/src/common \
                 $ngx_addon_dir/src/common/proxy_wasm"
ngx_module_libs="$ngx_feature_libs"
ngx_module_deps="$ngx_addon_dir/src/wasm/wrt/ngx_wrt.h \
                 $ngx_addon_dir/src/wasm/ngx_wasm.h \
                 $ngx_addon_dir/src/wasm/vm/ngx_wavm.h \
                 $ngx_addon_dir/src/wasm/vm/ngx_wavm_host.h \
                 $ngx_addon_dir/src/wasm/ngx_wasm_ops.h \
                 $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm.h"
ngx_module_srcs="$ngx_addon_dir/src/wasm/ngx_wasm.c \
                 $ngx_addon_dir/src/wasm/ngx_wasm_ops.c \
                 $ngx_addon_dir/src/wasm/ngx_wasm_util.c \
                 $ngx_addon_dir/src/wasm/vm/ngx_wavm.c \
                 $ngx_addon_dir/src/wasm/vm/ngx_wavm_host.c \
                 $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm.c \
                 $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_host.c \
                 $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_util.c \
                 $ngx_wasm_runtime_srcs"
ngx_module_link=ADDON

. auto/module

###############################################################################

ngx_module_type=WASM
ngx_module_name=ngx_wasm_core_module
ngx_module_incs=
ngx_module_libs=
ngx_module_deps=
ngx_module_srcs="$ngx_addon_dir/src/wasm/ngx_wasm_core_module.c \
                 $ngx_addon_dir/src/wasm/ngx_wasm_core_host.c"
ngx_module_link=ADDON

. auto/module

###############################################################################

if [ $HTTP = YES ]; then
    have=NGX_WASM_HTTP . auto/define

    ngx_module_type=HTTP
    ngx_module_name=ngx_http_wasm_module
    ngx_module_incs="$ngx_addon_dir/src/http \
                     $ngx_addon_dir/src/http/proxy_wasm"
    ngx_module_libs=
    ngx_module_deps="$ngx_addon_dir/src/http/ngx_http_wasm.h \
                     $ngx_addon_dir/src/http/ngx_http_wasm_util.h \
                     $ngx_addon_dir/src/http/ngx_http_wasm_headers.h \
                     $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm.h"
    ngx_module_srcs="$ngx_addon_dir/src/http/ngx_http_wasm_module.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_directives.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_local_response.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_headers.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_headers_request.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_headers_response.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_host.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_util.c \
                     $ngx_addon_dir/src/http/ngx_http_wasm_escape.c \
                     $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm.c"
    ngx_module_link=ADDON

    . auto/module
fi

###############################################################################

# bypass auto/make which does not recognize WASM_INCS and WASM_MODULES
CORE_INCS="$CORE_INCS $WASM_INCS"
CORE_MODULES="$CORE_MODULES $WASM_MODULES"

# vim:ft=sh ts=4 sts=4 sw=4:
