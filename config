ngx_addon_name=ngx_wasmx_module
ngx_found=no

ngx_wasm_runtime_name=${NGX_WASM_RUNTIME:-wasmtime}

case $ngx_wasm_runtime_name in
    wasmtime)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wasmtime.c"
        ngx_wasm_runtime_post_libs="-ldl -lm -lpthread"

        ngx_feature_name="NGX_WASM_HAVE_WASMTIME"
        ngx_feature_incs="#include <wasm.h>
                          #include <wasmtime.h>"
        ;;
    wasmer)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_wasmer.c"
        ngx_wasm_runtime_post_libs="-ldl -lm -lpthread"

        ngx_wasm_cargo_lib_name=ngx_wasm_rs
        ngx_wasm_cargo_lib_dir=$ngx_addon_dir/lib/ngx-wasm-rs
        ngx_wasm_cargo_mandatory=no
        ngx_wasm_cargo_flags=""
        ngx_wasm_cargo_crate_type="cdylib"
        ngx_wasm_cargo_defines="NGX_WASM_BACKTRACE"
        ngx_wasm_cargo_feature_incs="#include <ngx_wasm_backtrace.h>"

        ngx_feature_name="NGX_WASM_HAVE_WASMER"
        ngx_feature_incs="#include <wasmer.h>"
        ;;
    v8)
        ngx_wasm_runtime_srcs="$ngx_addon_dir/src/wasm/wrt/ngx_wrt_v8.c"
        ngx_wasm_runtime_lib_name="wee8"
        ngx_wasm_runtime_pre_libs="-lv8bridge"

        if [ "$NGX_SYSTEM" = "Darwin" ]; then
            ngx_wasm_runtime_post_libs="-ldl -lm -lpthread -lstdc++"

        else
            ngx_wasm_runtime_post_libs="-ldl -lm -lpthread -lstdc++ -latomic"
        fi

        ngx_wasm_cargo_lib_name=ngx_wasm_rs
        ngx_wasm_cargo_lib_dir=$ngx_addon_dir/lib/ngx-wasm-rs
        ngx_wasm_cargo_mandatory=yes
        ngx_wasm_cargo_flags="--features wat"
        ngx_wasm_cargo_defines="NGX_WASM_BACKTRACE NGX_WASM_WAT"
        ngx_wasm_cargo_feature_incs="#include <ngx_wasm_wat.h>"

        ngx_feature_name="NGX_WASM_HAVE_V8"
        ngx_feature_incs="#include <wasm.h>"
        ;;
    *)
        echo "$0: error: $ngx_addon_name does not support the \"$ngx_wasm_runtime_name\" runtime."
        echo "Supported runtimes: wasmtime, wasmer, v8."
        echo
        exit 1
esac

# auto/runtime

ngx_wasm_runtime_inc=$NGX_CC_OPT
ngx_wasm_runtime_lib=
ngx_wasm_runtime_opt=$NGX_LD_OPT

. $ngx_addon_dir/auto/runtime

if [ -n "$NGX_WASM_RUNTIME_INC" -o -n "$NGX_WASM_RUNTIME_LIB" ]; then
    ngx_wasm_runtime_inc="-I $NGX_WASM_RUNTIME_INC"
    ngx_wasm_runtime_lib="-L$NGX_WASM_RUNTIME_LIB"
    ngx_wasm_runtime_opt=$NGX_WASM_RUNTIME_LD_OPT

    . $ngx_addon_dir/auto/runtime
fi

ngx_wasm_runtime_inc="-I /usr/local/opt/include"
ngx_wasm_runtime_lib="-L/usr/local/opt/lib"
ngx_wasm_runtime_opt=

. $ngx_addon_dir/auto/runtime

ngx_wasm_runtime_inc="-I /usr/local/include"
ngx_wasm_runtime_lib="-L/usr/local/lib"
ngx_wasm_runtime_opt=

. $ngx_addon_dir/auto/runtime

if [ $ngx_found = no ]; then
    echo "$0: error: $ngx_addon_name could not find the \"$ngx_wasm_runtime_name\" library."
    echo "You can set the NGX_WASM_RUNTIME_INC, NGX_WASM_RUNTIME_LIB, and NGX_WASM_RUNTIME_LD_OPT environment variables."
    echo
    exit 1
fi

ngx_wasm_runtime_path=$ngx_feature_path
ngx_wasm_runtime_libs=$ngx_feature_libs

have=NGX_WASM_RUNTIME value="\"$ngx_wasm_runtime_name\"" . auto/define

# auto/cargo (ngx_wasm_rs)

if [ "$ngx_wasm_cargo_lib_name" = ngx_wasm_rs ]; then
    if [ "$NGX_WASM_CARGO" != 0 ]; then
        . $ngx_addon_dir/auto/cargo

        if [ $ngx_found = yes ]; then
            ngx_wasm_runtime_path="$ngx_wasm_runtime_path $ngx_feature_path"
            ngx_wasm_runtime_libs="$ngx_wasm_runtime_libs $ngx_feature_libs"
        fi
    fi

    if echo -n "$ngx_wasm_runtime_libs\n$NGX_LD_OPT" | grep -q "ngx-wasm-rs"; then
        for d in $ngx_wasm_cargo_defines; do
            have=$d value=1 . auto/define
        done

    elif [ $ngx_wasm_cargo_mandatory = yes ]; then
        echo "$0: error: $ngx_addon_name with $NGX_WASM_RUNTIME requires lib$ngx_wasm_cargo_lib_name - aborting."
        echo
        exit 1
    fi
fi

###############################################################################

# wasmx

NGX_WASMX_INCS="\
    $ngx_addon_dir/src \
    $ngx_addon_dir/src/common \
    $ngx_addon_dir/src/common/proxy_wasm \
    $ngx_addon_dir/src/common/shm \
    $ngx_addon_dir/src/common/metrics \
    $ngx_addon_dir/src/common/lua"

NGX_WASMX_DEPS="\
    $ngx_addon_dir/src/ngx_wasmx.h \
    $ngx_addon_dir/src/common/ngx_wasm_subsystem.h \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp.h \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp_readers.h \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm.h \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_maps.h \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_properties.h \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm.h \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_kv.h \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_queue.h \
    $ngx_addon_dir/src/common/metrics/ngx_wa_histogram.h \
    $ngx_addon_dir/src/common/metrics/ngx_wa_metrics.h"

NGX_WASMX_SRCS="\
    $ngx_addon_dir/src/ngx_wasmx.c \
    $ngx_addon_dir/src/common/ngx_wasm_subsystem.c \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp.c \
    $ngx_addon_dir/src/common/ngx_wasm_socket_tcp_readers.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_host.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_maps.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_properties.c \
    $ngx_addon_dir/src/common/proxy_wasm/ngx_proxy_wasm_util.c \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm.c \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_kv.c \
    $ngx_addon_dir/src/common/shm/ngx_wasm_shm_queue.c \
    $ngx_addon_dir/src/common/metrics/ngx_wa_histogram.c \
    $ngx_addon_dir/src/common/metrics/ngx_wa_metrics.c"

# wasm

NGX_WASM_INCS="\
    $NGX_WASMX_INCS \
    $ngx_wasm_runtime_path \
    $ngx_addon_dir/src/wasm \
    $ngx_addon_dir/src/wasm/wrt \
    $ngx_addon_dir/src/wasm/vm \
    $ngx_addon_dir/src/wasm/wasi"

NGX_WASM_DEPS="\
    $NGX_WASMX_DEPS \
    $ngx_addon_dir/src/wasm/ngx_wasm.h \
    $ngx_addon_dir/src/wasm/wrt/ngx_wrt.h \
    $ngx_addon_dir/src/wasm/ngx_wasm_ops.h \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm.h \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm_host.h \
    $ngx_addon_dir/src/wasm/wasi/ngx_wasi.h"

NGX_WASM_SRCS="\
    $NGX_WASMX_SRCS \
    $ngx_wasm_runtime_srcs \
    $ngx_addon_dir/src/wasm/ngx_wasm_ops.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_util.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_directives.c \
    $ngx_addon_dir/src/wasm/wrt/ngx_wrt_utils.c \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm.c \
    $ngx_addon_dir/src/wasm/vm/ngx_wavm_host.c \
    $ngx_addon_dir/src/wasm/wasi/ngx_wasi_host.c"

NGX_WASM_CORE_SRCS="\
    $ngx_addon_dir/src/wasm/ngx_wasm_core_module.c \
    $ngx_addon_dir/src/wasm/ngx_wasm_core_host.c"

# ipc

NGX_IPC_INCS="\
    $ngx_addon_dir/src/ipc"

NGX_IPC_DEPS="\
    $ngx_addon_dir/src/ipc/ngx_ipc.h"

NGX_IPC_SRCS="\
    $ngx_addon_dir/src/ipc/ngx_ipc.c"

NGX_IPC_CORE_SRCS="\
    $ngx_addon_dir/src/ipc/ngx_ipc_core_module.c"

# http

NGX_HTTP_WASM_INCS="\
    $ngx_addon_dir/src/http \
    $ngx_addon_dir/src/http/proxy_wasm"

NGX_HTTP_WASM_DEPS="\
    $ngx_addon_dir/src/http/ngx_http_wasm.h \
    $ngx_addon_dir/src/http/ngx_http_wasm_util.h \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers.h \
    $ngx_addon_dir/src/http/ngx_http_wasm_trailers.h \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm.h \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm_dispatch.h"

NGX_HTTP_WASM_SRCS="\
    $ngx_addon_dir/src/http/ngx_http_wasm_module.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_directives.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_local_response.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers_request.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers_response.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_trailers_response.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_headers_shims.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_host.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_util.c \
    $ngx_addon_dir/src/http/ngx_http_wasm_escape.c \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm.c \
    $ngx_addon_dir/src/http/proxy_wasm/ngx_http_proxy_wasm_dispatch.c"

NGX_HTTP_WASM_FILTER_SRCS="\
    $ngx_addon_dir/src/http/ngx_http_wasm_filter_module.c"

# stream

NGX_STREAM_WASM_INCS="\
    $ngx_addon_dir/src/stream \
    $ngx_addon_dir/src/stream/proxy_wasm"

NGX_STREAM_WASM_DEPS="\
    $ngx_addon_dir/src/stream/ngx_stream_wasm.h \
    $ngx_addon_dir/src/stream/proxy_wasm/ngx_stream_proxy_wasm.h"

NGX_STREAM_WASM_SRCS="\
    $ngx_addon_dir/src/stream/ngx_stream_wasm_module.c"

# debug

NGX_WASM_DEBUG_SRCS="\
    $ngx_addon_dir/src/common/debug/ngx_wasm_debug_module.c"

# ssl

if [ $HTTP_SSL = YES -o $STREAM_SSL = YES ]; then
    NGX_WASM_DEPS="\
        $NGX_WASM_DEPS \
        $ngx_addon_dir/src/common/ngx_wasm_ssl.h"

    NGX_WASM_SRCS="\
        $NGX_WASM_SRCS \
        $ngx_addon_dir/src/common/ngx_wasm_ssl.c"
fi

# lua

if [ -n "$HTTP_LUA_DEPS" ]; then

    if [ $HTTP = YES ]; then
        # ../build/ngx_lua-x.y.z/srx/ngx_http_lua_util.h
        ngx_lua_dir=$(find .. -maxdepth 1 -type d -name 'ngx_lua-*')
        NGX_HTTP_WASM_INCS="$NGX_HTTP_WASM_INCS $ngx_lua_dir/src"
    fi

    if [ $STREAM = YES ]; then
        # ../build/ngx_stream_lua-x.y.z/srx/ngx_stream_lua_util.h
        ngx_stream_lua_dir=$(find .. -maxdepth 1 -type d -name 'ngx_stream_lua-*')
        NGX_STREAM_WASM_INCS="$NGX_STREAM_WASM_INCS $ngx_stream_lua_dir/src"
    fi

    NGX_WASM_DEPS="\
        $NGX_WASM_DEPS \
        $ngx_addon_dir/src/common/lua/ngx_wasm_lua.h \
        $ngx_addon_dir/src/common/lua/ngx_wasm_lua_ffi.h \
        $ngx_addon_dir/src/common/lua/ngx_wasm_lua_resolver.h"

    NGX_WASM_SRCS="\
        $NGX_WASM_SRCS \
        $ngx_addon_dir/src/common/lua/ngx_wasm_lua.c \
        $ngx_addon_dir/src/common/lua/ngx_wasm_lua_ffi.c \
        $ngx_addon_dir/src/common/lua/ngx_wasm_lua_resolver.c"

    have=NGX_WASM_LUA value=1 . auto/define
fi

###############################################################################

if [ "$ngx_module_link" = DYNAMIC ]; then
    ngx_module_order="$ngx_addon_name \
                      ngx_wasm_core_module"

    ngx_module_type=CORE
    ngx_module_name=$ngx_addon_name
    ngx_module_incs="$NGX_WASM_INCS"
    ngx_module_deps="$NGX_WASM_DEPS"
    ngx_module_srcs="$NGX_WASM_SRCS $NGX_WASM_CORE_SRCS"
    ngx_module_libs=$ngx_wasm_runtime_libs

    if [ $NGX_DEBUG = YES ]; then
        ngx_module_order="$ngx_module_order \
                          ngx_wasm_debug_module"
        ngx_module_srcs="$ngx_module_srcs $NGX_WASM_DEBUG_SRCS"
    fi

    if [ $NGX_IPC != 0 ]; then
        ngx_module_order="$ngx_module_order \
                          ngx_ipc_core_module"
        ngx_module_incs="$ngx_module_incs $NGX_IPC_INCS"
        ngx_module_deps="$ngx_module_deps $NGX_IPC_DEPS"
        ngx_module_srcs="$ngx_module_srcs $NGX_IPC_SRCS $NGX_IPC_CORE_SRCS"

        have=NGX_WA_IPC value=1 . auto/define
    fi

else
    # addon
    ngx_module_type=CORE
    ngx_module_name=$ngx_addon_name
    ngx_module_incs="$NGX_WASM_INCS"
    ngx_module_deps="$NGX_WASM_DEPS"
    ngx_module_srcs="$NGX_WASM_SRCS"
    ngx_module_libs=

    if [ $NGX_IPC != 0 ]; then
        ngx_module_incs="$ngx_module_incs $NGX_IPC_INCS"
        ngx_module_deps="$ngx_module_deps $NGX_IPC_DEPS"
        ngx_module_srcs="$ngx_module_srcs $NGX_IPC_SRCS $NGX_IPC_CORE_SRCS"
    fi

    . auto/module

    ngx_module_type=WASM
    ngx_module_name=ngx_wasm_core_module
    ngx_module_incs="$NGX_WASM_INCS"
    ngx_module_deps="$NGX_WASM_DEPS"
    ngx_module_srcs="$NGX_WASM_CORE_SRCS"
    ngx_module_libs=$ngx_wasm_runtime_libs

    . auto/module

    if [ $NGX_IPC != 0 ]; then
        ngx_module_type=IPC
        ngx_module_name=ngx_ipc_core_module
        ngx_module_incs="$NGX_IPC_INCS"
        ngx_module_deps="$NGX_IPC_DEPS"
        ngx_module_srcs="$NGX_IPC_CORE_SRCS"
        ngx_module_libs=

        . auto/module

        have=NGX_WA_IPC value=1 . auto/define
    fi

    if [ $NGX_DEBUG = YES ]; then
        ngx_module_type=WASM
        ngx_module_name=ngx_wasm_debug_module
        ngx_module_incs="$NGX_WASM_INCS"
        ngx_module_deps="$NGX_WASM_DEPS"
        ngx_module_srcs="$NGX_WASM_DEBUG_SRCS"
        ngx_module_libs=

        . auto/module
    fi
fi

###############################################################################

if [ $HTTP = YES ]; then
    if [ "$ngx_module_link" = DYNAMIC ]; then
        ngx_module_order="$ngx_module_order \
                          ngx_http_wasm_module \
                          ngx_http_wasm_filter_module"

        ngx_module_incs="$ngx_module_incs \
                         $NGX_HTTP_WASM_INCS"
        ngx_module_deps="$ngx_module_deps \
                         $NGX_HTTP_WASM_DEPS"
        ngx_module_srcs="$ngx_module_srcs \
                         $NGX_HTTP_WASM_SRCS \
                         $NGX_HTTP_WASM_FILTER_SRCS"

        if [ $NGX_DEBUG = YES ]; then
            ngx_module_order="$ngx_module_order \
                              ngx_http_wasm_debug_filter_module"
        fi

    else
        # addon
        ngx_module_type=HTTP
        ngx_module_name=ngx_http_wasm_module
        ngx_module_incs="$NGX_HTTP_WASM_INCS"
        ngx_module_deps="$NGX_HTTP_WASM_DEPS"
        ngx_module_srcs="$NGX_HTTP_WASM_SRCS"
        ngx_module_libs=

        . auto/module

        ngx_module_type=HTTP_FILTER
        ngx_module_name=ngx_http_wasm_filter_module
        ngx_module_incs="$NGX_HTTP_WASM_INCS"
        ngx_module_deps="$NGX_HTTP_WASM_DEPS"
        ngx_module_srcs="$NGX_HTTP_WASM_FILTER_SRCS"
        ngx_module_libs=

        . auto/module

        if [ $NGX_DEBUG = YES ]; then
            ngx_module_type=HTTP_FILTER
            ngx_module_name=ngx_http_wasm_debug_filter_module
            ngx_module_incs="$NGX_HTTP_WASM_INCS"
            ngx_module_deps="$NGX_HTTP_WASM_DEPS"
            ngx_module_srcs="$NGX_WASM_DEBUG_SRCS"
            ngx_module_libs=

            . auto/module
        fi
    fi

    have=NGX_WASM_HTTP value=1 . auto/define
fi

if [ $STREAM = YES ]; then
    if [ "$ngx_module_link" = DYNAMIC ]; then
        ngx_module_incs="$ngx_module_incs \
                         $NGX_STREAM_WASM_INCS"
        ngx_module_deps="$ngx_module_deps \
                         $NGX_STREAM_WASM_DEPS"
        ngx_module_srcs="$ngx_module_srcs \
                         $NGX_STREAM_WASM_SRCS"

    else
        # addon
        ngx_module_type=STREAM
        ngx_module_name=ngx_stream_wasm_module
        ngx_module_incs="$NGX_STREAM_WASM_INCS"
        ngx_module_deps="$NGX_STREAM_WASM_DEPS"
        ngx_module_srcs="$NGX_STREAM_WASM_SRCS"
        ngx_module_libs=

        . auto/module
    fi

    have=NGX_WASM_STREAM value=1 . auto/define
fi

###############################################################################

if [ "$ngx_module_link" = DYNAMIC ]; then
    # ngx_wasmx_module.so (dynamic module)
    . auto/module

    # add other modules into this bundled one
    ngx_wasmx_module_MODULES=$ngx_module_order

    have=NGX_WASM_DYNAMIC_MODULE value=1 . auto/define

else
    # addon
    # bypass auto/make which does not recognize custom $*_MODULES variables
    CORE_MODULES="$CORE_MODULES $WASM_MODULES"
    # initialize after the event module (connections initializer)
    EVENT_MODULES="$EVENT_MODULES $IPC_MODULES"
fi

# vim:ft=sh ts=4 sts=4 sw=4:
