FROM ubuntu:22.04
COPY . /ngx_wasm_module

ARG GCC_VERSION=12
ARG CLANG_VERSION=15
ARG GOLANG_VERSION=1.19.5
ARG TINYGO_VERSION=0.27.0
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        build-essential \
        ninja-build \
        python3 \
        cmake \
        gcc-${GCC_VERSION} \
        libstdc++-${GCC_VERSION}-dev \
        git \
        pkg-config \
        libglib2.0-dev \
        clang-${CLANG_VERSION} \
        curl \
        binfmt-support \
        qemu-user-static && \
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${CLANG_VERSION} 100

ENV RUSTUP_HOME=/usr/local/rustup CARGO_HOME=/usr/local/cargo
ENV PATH $CARGO_HOME/bin:$PATH
RUN mkdir -p "$CARGO_HOME" && mkdir -p "$RUSTUP_HOME" && \
    curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable && \
    chmod -R a=rwX $CARGO_HOME $RUSTUP_HOME

RUN /bin/bash -c 'echo $(uname -m) > /TG_ARCH || : ; \
                  [[ $(cat /TG_ARCH) == "x86_64" ]] && echo "amd64" > /TG_ARCH || : ; \
                  [[ $(cat /TG_ARCH) == "aarch64" ]] && echo "arm64" > /TG_ARCH || :'

# Note: this image is also used for local CI runs, install additional
# dependencies
#
# unzip: LuaRocks
RUN apt-get install -y \
        clang-tools-${CLANG_VERSION} \
        libpcre3-dev \
        libssl-dev \
        zlib1g-dev \
        valgrind \
        nodejs \
        gcovr \
        lcov \
        unzip \
        sudo && \
    update-alternatives --install /usr/bin/scan-build scan-build /usr/bin/scan-build-${CLANG_VERSION} 100 && \
    rustup target add wasm32-wasi && \
    rustup target add wasm32-unknown-unknown && \
    curl -sLO https://golang.google.cn/dl/go${GOLANG_VERSION}.linux-$(cat /TG_ARCH).tar.gz && \
    sudo rm -rf /usr/local/go && tar -C /usr/local -xzf go${GOLANG_VERSION}.linux-$(cat /TG_ARCH).tar.gz && \
    curl -sLO https://github.com/tinygo-org/tinygo/releases/download/v$TINYGO_VERSION/tinygo_${TINYGO_VERSION}_$(cat /TG_ARCH).deb && \
    dpkg -i tinygo_${TINYGO_VERSION}_$(cat /TG_ARCH).deb && \
    curl -fsSL https://get.docker.com | sh
ENV PATH $PATH:/usr/local/go/bin
