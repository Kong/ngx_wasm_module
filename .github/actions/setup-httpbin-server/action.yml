name: setup-httpbin-server
decription: |
  Setup a local httpbin server and dnsmasq daemon resolving to it.

inputs:
  os:
    required: true
    type: string
  ghcr_username:
    required: true
    type: string
  ghcr_password:
    required: true
    type: string
  dns_port:
    description: 'dnsmasq port'
    required: false
    type: string
    default: '8053'
  upstream_dns_server:
    description: 'dnsmasq upstream resolver'
    required: false
    type: string
    default: '8.8.8.8'

runs:
  using: 'composite'
  steps:
    - name: 'Setup deps - apt-get'
      if: ${{ inputs.os == 'ubuntu-latest' }}
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y dnsmasq
    - name: 'Setup deps - macos'
      if: ${{ inputs.os == 'macos-latest' }}
      shell: bash
      run: |
        brew install dnsmasq
    - name: Setup Docker image tag
      id: setup
      shell: bash
      run: |
          if [ -z "${{ env.ACT }}" && -n "${{ inputs.ghcr_password }}" ]; then
            echo "push=true" >> $GITHUB_OUTPUT
            echo "tag=ghcr.io/kong/wasmx-ci-httpbin-proxy:latest" >> $GITHUB_OUTPUT

          else
            echo "push=false" >> $GITHUB_OUTPUT
            echo "tag=wasmx-ci-httpbin-proxy:latest" >> $GITHUB_OUTPUT
          fi
    - name: Login to GitHub Container Registry
      if: ${{ steps.setup.outputs.push == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.ghcr_username }}
        password: ${{ inputs.ghcr_password }}
    - name: Setup Docker Buildx
      if: ${{ !env.ACT }}
      uses: docker/setup-buildx-action@v3
    - name: Build httpbin-proxy image
      uses: docker/build-push-action@v5
      with:
        file: './assets/ci/Dockerfile.nginx'
        tags: ${{ steps.setup.outputs.tag }}
        push: ${{ steps.setup.outputs.push }}
        load: true
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Start dnsmasq
      shell: bash
      run: |
        dnsmasq --no-hosts \
                --no-resolv \
                --port=${{ inputs.dns_port }} \
                --server=${{ inputs.upstream_dns_server }} \
                --address=/httpbin.org/127.0.0.1 \
                --address=/example.com/127.0.0.1
    - name: Start httpbin proxy + server
      shell: bash
      run: |
        docker rm -f httpbin httpbin_proxy
        docker network create httpbin || true
        docker run -d \
                   --rm \
                   --name httpbin \
                   --network httpbin \
                   kennethreitz/httpbin
        docker run -d \
                   --rm \
                   --name httpbin_proxy \
                   --network httpbin \
                   -p 80:80 \
                   -p 443:443 \
                   ${{ steps.setup.outputs.tag }}
