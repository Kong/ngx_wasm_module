name: CI
on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
defaults:
  run:
    shell: bash

jobs:

  tests:
    name: 'Tests'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cc: [gcc-8]
        ngx: [1.19.1]
        wasmtime: [0.18.0]
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          default: true
          toolchain: nightly
          target: wasm32-unknown-unknown
      - uses: actions/checkout@v2
      - uses: ./.github/actions/wasmtime
        with:
          version: ${{ matrix.wasmtime }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: work
          key: work-${{ runner.os }}-${{ matrix.cc }}-${{ matrix.ngx }}-${{ hashFiles('.github/**/*.yml') }}--0
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make setup
      - run: make
        env:
          NGX_BUILD_FORCE: 1
          CC: ${{ matrix.cc }}
          NGX: ${{ matrix.ngx }}
      - run: make test

  valgrind:
    name: 'Valgrind'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    env:
      NGX_BUILD_NOPOOL: 1
      TEST_NGINX_USE_VALGRIND: 1
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cc: [gcc-8]
        ngx: [1.17.8]
        wasmtime: [0.18.0]
    steps:
      - run: sudo apt install -y valgrind gawk
      - uses: actions-rs/toolchain@v1
        with:
          default: true
          toolchain: nightly
          target: wasm32-unknown-unknown
      - uses: actions/checkout@v2
      - uses: ./.github/actions/wasmtime
        with:
          version: ${{ matrix.wasmtime }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: work
          key: work-${{ runner.os }}-${{ matrix.cc }}-${{ matrix.ngx }}-${{ hashFiles('.github/**/*.yml') }}--0
      - if: steps.cache.outputs.cache-hit != 'true'
        run: make setup
      - run: make
        env:
          NGX_BUILD_FORCE: 1
          CC: ${{ matrix.cc }}
          NGX: ${{ matrix.ngx }}
      - run: make test 2>&1 | tee valgrind.out
      - run: |
          awk -f ./util/parse-valgrind.awk valgrind.out > valgrind.log
          if [[ -s valgrind.log ]]; then
            exit 1
          fi
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: valgrind-leaks.log
          path: valgrind.log
