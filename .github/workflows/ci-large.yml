name: Large CI

on:
  schedule:
    - cron: '0 9 * * mon' # 9am UTC, 2am PST

defaults:
  run:
    shell: bash

jobs:
  tests-large:
    name: 'Unit (large)'
    uses: ./.github/workflows/unit-tests.yml
    with:
      os: ${{ matrix.os }}
      cc: ${{ matrix.cc }}
      ngx: ${{ matrix.ngx }}
      openresty: ${{ matrix.openresty }}
      runtime: ${{ matrix.runtime }}
      wasmer: ${{ matrix.wasmer }}
      wasmtime: ${{ matrix.wasmtime }}
      v8: ${{ matrix.v8 }}
      debug: ${{ matrix.debug }}
      hup: ${{ matrix.hup }}
      ssl: ${{ matrix.ssl }}
      module_type: ${{ matrix.module_type }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        runtime: [wasmtime, wasmer, v8]
        wasmtime: [0.38.1]
        wasmer: [3.0.2]
        v8: [11.4.183.23]
        debug: [debug, no_debug]
        hup: [hup, no_hup]
        os: [ubuntu-latest]
        #os: [ubuntu-latest, macos-latest]
        cc: [clang]
        ngx: [1.21.6]
        module_type: [static, dynamic]

  valgrind-large:
    name: 'Valgrind (large)'
    if: ${{ false }} # too slow
    uses: ./.github/workflows/valgrind.yml
    with:
      os: ${{ matrix.os }}
      cc: ${{ matrix.cc }}
      ngx: ${{ matrix.ngx }}
      openresty: ${{ matrix.openresty }}
      runtime: ${{ matrix.runtime }}
      wasmer: ${{ matrix.wasmer }}
      wasmtime: ${{ matrix.wasmtime }}
      v8: ${{ matrix.v8 }}
      hup: ${{ matrix.hup }}
      debug: ${{ matrix.debug }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cc: [gcc-8]
        ngx: [1.21.6]
        runtime: [wasmtime, wasmer, v8]
        wasmtime: [0.38.1]
        wasmer: [3.0.2]
        v8: [11.4.183.23]
        hup: [hup, no_hup]
        debug: [debug]

  analyzer-large:
    name: 'Clang analyzer (large)'
    uses: ./.github/workflows/clang-analyzer.yml
    with:
      cc: ${{ matrix.cc }}
      ngx: ${{ matrix.ngx }}
      openresty: ${{ matrix.openresty }}
      runtime: ${{ matrix.runtime }}
      wasmer: ${{ matrix.wasmer }}
      wasmtime: ${{ matrix.wasmtime }}
      v8: ${{ matrix.v8 }}
      debug: ${{ matrix.debug }}
      ssl: ${{ matrix.ssl }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cc: [clang-11]
        openresty: [1.21.4.1]
        runtime: [wasmer, wasmtime, v8]
        wasmer: [3.1.1]
        wasmtime: [8.0.1]
        v8: [11.4.183.23]
        debug: [debug, no_debug]
        ssl: [no_ssl, ssl]

  build:
    name: 'Build tests (large)'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        runtime: [wasmtime, wasmer, v8]
        wasmtime: [0.38.1]
        wasmer: [3.0.2]
        v8: [11.4.183.23]
        os: [ubuntu-latest]
        #os: [ubuntu-latest, macos-latest]
        cc: [clang]
        ngx: [1.21.6]
    steps:
      - uses: actions/checkout@v3
      - name: "Set up cache - ngx_wasm_module work/ dir"
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        id: cache
        with:
          path: |
            work
            !work/scans
          key: work-${{ runner.os }}-${{ matrix.cc }}-${{ matrix.ngx }}-${{ matrix.runtime }}-${{ hashFiles('util/**/*.sh', 'util/**/*.pl', 'util/**/*.awk', '.github/**/*.yml', '.github/**/*.sh', '.github/**/*.js', 'rust-toolchain') }}
      - name: Setup Wasm runtime
        run: ./util/runtime.sh -R ${{ matrix.runtime }} -V ${{ matrix[matrix.runtime] }}
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      - run: make setup
      - run: make test-build
        env:
          NGX_WASM_RUNTIME: ${{ matrix.runtime }}
