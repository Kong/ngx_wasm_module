name: CI

on:
  push:
    branches: main
  pull_request:
    branches: '**'

defaults:
  run:
    shell: bash

jobs:
  tests:
    name: 'Unit'
    uses: ./.github/workflows/unit-tests.yml
    with:
      os: ${{ matrix.os }}
      cc: ${{ matrix.cc }}
      ngx: ${{ matrix.ngx }}
      openresty: ${{ matrix.openresty }}
      runtime: ${{ matrix.runtime }}
      wasmer: ${{ matrix.wasmer }}
      wasmtime: ${{ matrix.wasmtime }}
      v8: ${{ matrix.v8 }}
      debug: ${{ matrix.debug }}
      hup: ${{ matrix.hup }}
      ssl: ${{ matrix.ssl }}
      module_type: ${{ matrix.module_type }}
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        label: [""]
        os: [ubuntu-latest]
        cc: [gcc-9]
        ngx: [1.25.1]
        openresty: [""]
        runtime: [wasmer]
        wasmer: [3.1.1]
        wasmtime: [""]
        v8: [""]
        debug: [debug, no_debug]
        hup: [no_hup]
        ssl: [ssl]
        module_type: ["static"]
        include:
          # Wasmtime
          - runtime: wasmtime
            wasmtime: 8.0.1
            os: ubuntu-latest
            cc: gcc-9
            ngx: 1.25.1
            debug: debug
            hup: hup
            ssl: ssl
          # V8
          - runtime: v8
            v8: 11.4.183.23
            os: ubuntu-latest
            cc: gcc-9
            ngx: 1.25.1
            debug: debug
            hup: no_hup
            ssl: ssl
          # Old Nginx
          - label: old_nginx
            os: ubuntu-latest
            cc: gcc-9
            ngx: 1.21.6
            runtime: wasmer
            wasmer: 3.1.1
            debug: debug
            hup: no_hup
            ssl: ssl
          # No SSL
          - ssl: no_ssl
            os: ubuntu-latest
            cc: gcc-9
            ngx: 1.25.1
            runtime: wasmer
            wasmer: 3.1.1
            debug: no_debug
            hup: no_hup
          # OpenResty
          - label: openresty
            os: ubuntu-latest
            cc: gcc-9
            openresty: 1.21.4.1
            runtime: wasmtime
            wasmtime: 8.0.1
            debug: debug
            hup: no_hup
            ssl: ssl
          # OpenResty + dynamic ngx_wasm_module
          - label: dynamic_module
            os: ubuntu-latest
            cc: gcc-9
            openresty: 1.21.4.1
            runtime: wasmtime
            wasmtime: 8.0.1
            debug: debug
            hup: no_hup
            ssl: ssl
            module_type: dynamic

  valgrind:
    name: 'Valgrind'
    uses: ./.github/workflows/valgrind.yml
    with:
      os: ${{ matrix.os }}
      cc: ${{ matrix.cc }}
      ngx: ${{ matrix.ngx }}
      openresty: ${{ matrix.openresty }}
      runtime: ${{ matrix.runtime }}
      wasmer: ${{ matrix.wasmer }}
      wasmtime: ${{ matrix.wasmtime }}
      v8: ${{ matrix.v8 }}
      hup: ${{ matrix.hup }}
      debug: ${{ matrix.debug }}
    strategy:
      fail-fast: false
      matrix:
        label: [""]
        os: [ubuntu-22.04]
        cc: [gcc-10]
        ngx: [1.25.1]
        openresty: [""]
        runtime: [wasmer]
        wasmer: [3.1.1]
        wasmtime: [""]
        v8: [""]
        hup: [no_hup, hup]
        debug: [debug]
        include:
          # Wasmtime
          - runtime: wasmtime
            wasmtime: 8.0.1
            os: ubuntu-22.04
            cc: gcc-10
            ngx: 1.25.1
            hup: no_hup
            debug: debug
          # V8
          - runtime: v8
            v8: 11.4.183.23
            os: ubuntu-22.04
            cc: gcc-10
            ngx: 1.25.1
            debug: debug
            hup: no_hup
          # OpenResty
          - label: openresty
            os: ubuntu-22.04
            cc: gcc-10
            openresty: 1.21.4.1
            ngx:
            runtime: wasmer
            wasmer: 3.1.1
            debug: debug
            hup: no_hup

  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    #if: ${{ false }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          components: clippy
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            work/downloads
          key: lint-${{ runner.os }}-${{ hashFiles('util/**/*.sh', 'util/**/*.pl', 'util/**/*.awk', '.github/**/*.yml', '.github/**/*.sh', '.github/**/*.js', 'rust-toolchain') }}
      - run: make setup
      - run: make lint
      - uses: actions-rs/clippy-check@v1
        if: ${{ !env.ACT }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - run: |
          if [[ $(make reindex 2>&1 | tee reindex.out | grep -c done) -gt 0 ]]; then
            cat reindex.out >&2
            exit 1
          fi

  analyzer:
    name: 'Clang analyzer'
    uses: ./.github/workflows/clang-analyzer.yml
    with:
      cc: ${{ matrix.cc }}
      ngx: ${{ matrix.ngx }}
      openresty: ${{ matrix.openresty }}
      runtime: ${{ matrix.runtime }}
      wasmer: ${{ matrix.wasmer }}
      wasmtime: ${{ matrix.wasmtime }}
      v8: ${{ matrix.v8 }}
      debug: ${{ matrix.debug }}
      ssl: ${{ matrix.ssl }}
    strategy:
      fail-fast: false
      matrix:
        cc: [clang-11]
        openresty: [1.21.4.1]
        runtime: [wasmer, wasmtime, v8]
        wasmer: [3.1.1]
        wasmtime: [8.0.1]
        v8: [11.4.183.23]
        debug: [debug, no_debug]
        ssl: [ssl]
        include:
          # No SSL
          - os: ubuntu-latest
            cc: clang-11
            ngx: 1.25.1
            runtime: wasmer
            wasmer: 3.1.1
            debug: debug
            ssl: no_ssl

  build:
    name: 'Test builds'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    #if: ${{ false }}
    strategy:
      fail-fast: false
      matrix:
        label: [""]
        os: [ubuntu-latest]
        cc: [clang-14, gcc-10]
        ngx: [1.25.1]
        runtime: [wasmer, wasmtime, v8]
        wasmtime: [8.0.1]
        wasmer: [3.1.1]
        v8: [11.4.183.23]
        include:
          - label: old_nginx
            os: ubuntu-latest
            cc: clang-14
            ngx: 1.21.6
            runtime: wasmtime
            wasmtime: 8.0.1
    steps:
      - uses: actions/checkout@v3
      - name: 'Setup cache - work/ dir'
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            work/downloads
            work/runtimes
          key: work-${{ runner.os }}-${{ matrix.cc }}-${{ matrix.ngx }}-${{ matrix.openresty }}-${{ matrix.runtime }}-${{ hashFiles('util/**/*.sh', 'util/**/*.pl', 'util/**/*.awk', '.github/**/*.yml', '.github/**/*.sh', '.github/**/*.js', 'rust-toolchain') }}
      - name: Setup Wasm runtime
        run: ./util/runtime.sh -R ${{ matrix.runtime }} -V ${{ matrix[matrix.runtime] }}
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
      - run: make setup
      - run: make test-build
        env:
          NGX_WASM_RUNTIME: ${{ matrix.runtime }}
