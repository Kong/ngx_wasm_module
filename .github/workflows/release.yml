name: Release

on:
  schedule:
    - cron: '0 6 * * mon-fri' # 6am UTC, 11pm PST
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (e.g. v0.1.0)'
        required: true

env:
  CC: clang
  NGX_VER: 1.21.5
  WASMTIME_VER: 0.33.0
  WASMER_VER: 2.1.1
  RETENTION_DAYS: 2

defaults:
  run:
    shell: bash

jobs:
  build-images:
    name: Build Docker binary build images
    runs-on: ubuntu-latest
    outputs:
      release_name: ${{ steps.assign-name.outputs.release_name }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN_GITHUB }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: "Ubuntu 18.04 build image"
        uses: docker/build-push-action@v2
        with:
          file: ./util/Dockerfiles/Dockerfile.amd64.ubuntu-18.04
          tags: ghcr.io/kong/wasmx-build-ubuntu:18.04
          push: true
      - name: "Ubuntu 20.04 build image"
        uses: docker/build-push-action@v2
        with:
          file: ./util/Dockerfiles/Dockerfile.amd64.ubuntu-20.04
          tags: ghcr.io/kong/wasmx-build-ubuntu:20.04
          push: true
      - name: "Centos 7 build image"
        uses: docker/build-push-action@v2
        with:
          file: ./util/Dockerfiles/Dockerfile.amd64.centos7
          tags: ghcr.io/kong/wasmx-build-centos:7
          push: true
      - name: ArchLinux build image
        uses: docker/build-push-action@v2
        with:
          file: ./util/Dockerfiles/Dockerfile.amd64.archlinux
          tags: ghcr.io/kong/wasmx-build-arch:latest
          push: true
      - id: assign-name
        run: |
          if [ "${{ github.event_name }}" = schedule ]; then
            echo "::set-output name=release_name::nightly-$(date -u +%Y%m%d)"
          else
            echo "::set-output name=release_name::${{ github.event.inputs.release_name }}"
          fi

  build-ubuntu-bionic:
    name: "Build Ubuntu 18.04 (bionic) binary"
    needs: build-images
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kong/wasmx-build-ubuntu:18.04
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_GITHUB }}
    steps:
      - uses: actions/checkout@v2
      - name: Build binary
        run: ./util/release.sh ${{ needs.build-images.outputs.release_name }} --bin
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: dist
          retention-days: ${{ env.RETENTION_DAYS }}

  build-ubuntu-focal:
    name: "Build Ubuntu 20.04 (focal) binary"
    needs: build-images
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kong/wasmx-build-ubuntu:20.04
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_GITHUB }}
    steps:
      - uses: actions/checkout@v2
      - name: Build binary
        run: ./util/release.sh ${{ needs.build-images.outputs.release_name }} --bin
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: dist
          retention-days: ${{ env.RETENTION_DAYS }}

  build-centos7:
    name: "Build Centos 7 binary"
    needs: build-images
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kong/wasmx-build-centos:7
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_GITHUB }}
    steps:
      - uses: actions/checkout@v2
      - name: Build binary
        run: ./util/release.sh ${{ needs.build-images.outputs.release_name }} --bin
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: dist
          retention-days: ${{ env.RETENTION_DAYS }}

  build-arch:
    name: Build ArchLinux binary
    needs: build-images
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kong/wasmx-build-arch:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_GITHUB }}
    steps:
      - uses: actions/checkout@v2
      - name: Build binary
        run: ./util/release.sh ${{ needs.build-images.outputs.release_name }} --bin
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: dist
          retention-days: ${{ env.RETENTION_DAYS }}

  build-macos:
    name: Build macOS binary
    needs: build-images
    runs-on: [macos-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Build binary
        run: ./util/release.sh ${{ needs.build-images.outputs.release_name }} --bin
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: dist
          retention-days: ${{ env.RETENTION_DAYS }}

  upload-artifacts:
    name: Upload release artifacts
    needs: [build-images, build-ubuntu-bionic, build-ubuntu-focal, build-arch, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve sibling release artifacts
        uses: actions/download-artifact@v2
        with:
          name: release-artifacts
      - uses: marvinpinto/action-automatic-releases@latest
        if: ${{ github.event_name == 'schedule' }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: nightly
          prerelease: true
          title: ${{ needs.build-images.outputs.release_name }}
          files: |
            *.tar.gz
      - uses: marvinpinto/action-automatic-releases@latest
        if: ${{ github.event_name != 'schedule' }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: release-${{ needs.build-images.outputs.release_name }}
          prerelease: true
          title: ${{ needs.build-images.outputs.release_name }}
          files: |
            *.tar.gz
